{"ast":null,"code":"import axios from \"axios\";\nexport const GET_TYPES = \"GET_TYPES\";\nexport const GET_POKEMONS = \"GET_POKEMONS\";\nexport const GET_DETAILS = \"GET_DETAILS\";\nexport const SEARCH_POKEMON_BY_NAME = \"SEARCH_POKEMON_BY_NAME\";\nexport const FILTER_BY_TYPE = \"FILTER_BY_TYPE\";\nexport const SORT = \"SORT\";\nexport const FILTER_CREATED = \"FILTER_CREATED\";\nexport const FILTER_BY_ATTACK = \"FILTER_BY_ATTACK\";\nexport const getPokemons = () => async dispatch => {\n  const resolve = await fetch(\"http://localhost:3001/pokemons\");\n  const data = await resolve.json();\n  return dispatch({\n    type: GET_POKEMONS,\n    payload: data\n  });\n};\nexport const getTypes = () => async dispatch => {\n  const resolve = await fetch(\"http://localhost:3001/types\");\n  const data = await resolve.json();\n  return dispatch({\n    type: GET_TYPES,\n    payload: data\n  });\n};\nexport const getDetails = id => async dispatch => {\n  const resolve = await fetch(`http://localhost:3001/pokemons/${id}`);\n  const data = await resolve.json();\n  return dispatch({\n    type: GET_DETAILS,\n    payload: data\n  });\n};\nexport const searchPokemonName = name => async dispatch => {\n  try {\n    const resolve = await fetch(`http://localhost:3001/pokemons?name=${name}`);\n    const data = await resolve.json();\n    return dispatch({\n      type: SEARCH_POKEMON_BY_NAME,\n      payload: data\n    });\n  } catch {\n    return alert(\"Pokemon not found\");\n  }\n};\nexport const filterPokemonsByType = payload => ({\n  type: FILTER_BY_TYPE,\n  payload\n});\n\n// export const postPokemon = (payload) => {\n//   return async function () {\n//     const data = await payload.json()\n//     const response = await axios.post(\"http://localhost:3001/pokemons/\" , data)\n//     return response;\n//   }\n// }\n\nexport const postPokemon = payload => async dispatch => {\n  try {\n    const response = await axios.post(\"http://localhost:3001/pokemons\", payload);\n    alert(`Se creo a ${response.data.name} con exito`);\n  } catch (error) {\n    alert(\"No se a creado el pokemon, nombre repetido\");\n  }\n};\nexport const Sort = order => {\n  return {\n    type: SORT,\n    payload: order\n  };\n};\n_c = Sort;\nexport const filterCreated = payload => {\n  return {\n    type: FILTER_CREATED,\n    payload\n  };\n};\nexport const filterByAttack = payload => {\n  return {\n    type: FILTER_BY_ATTACK,\n    payload\n  };\n};\nvar _c;\n$RefreshReg$(_c, \"Sort\");","map":{"version":3,"names":["axios","GET_TYPES","GET_POKEMONS","GET_DETAILS","SEARCH_POKEMON_BY_NAME","FILTER_BY_TYPE","SORT","FILTER_CREATED","FILTER_BY_ATTACK","getPokemons","dispatch","resolve","fetch","data","json","type","payload","getTypes","getDetails","id","searchPokemonName","name","alert","filterPokemonsByType","postPokemon","response","post","error","Sort","order","filterCreated","filterByAttack"],"sources":["F:/Henry/PI/PI Pokemon/PI-Pokemon-main/PI-Pokemon-main/PI-Pokemon-main reymon744/client/src/redux/actions/index.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\n\r\nexport const GET_TYPES = \"GET_TYPES\";\r\nexport const GET_POKEMONS = \"GET_POKEMONS\";\r\nexport const GET_DETAILS = \"GET_DETAILS\";\r\nexport const SEARCH_POKEMON_BY_NAME = \"SEARCH_POKEMON_BY_NAME\";\r\nexport const FILTER_BY_TYPE = \"FILTER_BY_TYPE\";\r\nexport const SORT = \"SORT\";\r\nexport const FILTER_CREATED = \"FILTER_CREATED\";\r\nexport const FILTER_BY_ATTACK = \"FILTER_BY_ATTACK\";\r\n\r\n\r\n\r\nexport const getPokemons = () => async (dispatch) => {\r\n    const resolve = await fetch(\"http://localhost:3001/pokemons\");\r\n    const data = await resolve.json();\r\n    return dispatch({ type: GET_POKEMONS, payload: data });\r\n  };\r\n\r\nexport const getTypes = () => async (dispatch) => {\r\n    const resolve = await fetch(\"http://localhost:3001/types\");\r\n    const data = await resolve.json();\r\n    return dispatch({ type: GET_TYPES, payload: data });\r\n  };\r\n\r\nexport const getDetails = (id) => async (dispatch) => {\r\n    const resolve = await fetch(`http://localhost:3001/pokemons/${id}`);\r\n    const data = await resolve.json();\r\n    return dispatch({ type: GET_DETAILS, payload: data });\r\n  };\r\n\r\nexport const searchPokemonName = (name) => async (dispatch) => {\r\n    try {\r\n      const resolve = await fetch(`http://localhost:3001/pokemons?name=${name}`);\r\n      const data = await resolve.json();\r\n      return dispatch({ type: SEARCH_POKEMON_BY_NAME, payload: data });\r\n    } catch {\r\n      return alert(\"Pokemon not found\");\r\n    }\r\n  };\r\n\r\n\r\n\r\nexport const filterPokemonsByType = (payload) => ({\r\n  type: FILTER_BY_TYPE,\r\n  payload,\r\n});\r\n\r\n// export const postPokemon = (payload) => {\r\n//   return async function () {\r\n//     const data = await payload.json()\r\n//     const response = await axios.post(\"http://localhost:3001/pokemons/\" , data)\r\n//     return response;\r\n//   }\r\n// }\r\n\r\nexport const postPokemon = (payload) => async (dispatch) => {\r\n  try {\r\n    const response = await axios.post(\"http://localhost:3001/pokemons\", payload);\r\n    alert(`Se creo a ${response.data.name} con exito`)\r\n  } catch (error) {\r\n    alert(\"No se a creado el pokemon, nombre repetido\")\r\n  }\r\n};\r\n\r\nexport const Sort = (order) => {\r\n  return {\r\n      type: SORT,\r\n      payload: order\r\n  }\r\n}\r\nexport const filterCreated = (payload) => {\r\n  return {\r\n    type: FILTER_CREATED,\r\n    payload\r\n  };\r\n}\r\n\r\nexport const filterByAttack = (payload) => {\r\n  return {\r\n    type: FILTER_BY_ATTACK,\r\n    payload\r\n  }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}