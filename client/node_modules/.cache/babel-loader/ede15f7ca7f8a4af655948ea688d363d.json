{"ast":null,"code":"var _jsxFileName = \"F:\\\\Henry\\\\PI\\\\PI Pokemon\\\\PI-Pokemon-main\\\\PI Pokemon\\\\client\\\\src\\\\components\\\\UpdatePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { updatePokemon } from '../redux/actions/index';\nimport NavBar from './NavBar';\nimport \"./CreatePage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst validateForm = _ref => {\n  let {\n    name,\n    image,\n    hp,\n    attack,\n    defense,\n    speed,\n    height,\n    weight\n  } = _ref;\n  const errors = {};\n  const urlRegex = /(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/;\n  const onlyLetters = /[\\^$.¡*+?=¿%&!:|\\\\/()[\\]{}1234567890¬\"'#;-@¨]/;\n  const onlyNumbers = /[\\^$.¡*+?=¿%&!:|\\\\/()[\\]{}¬\"'#;-@¨]/;\n  if (typeof name !== \"string\" || name.length <= 2 || name.length >= 25 || onlyLetters.test(name)) {\n    errors.name = \"Please write between 2-25 lowercases\";\n  } else if (!urlRegex.test(image)) errors.image = \"Please provide a valid URL for the image\";else if (isNaN(hp) || onlyNumbers.test(hp) || hp < 1 || hp > 500) errors.hp = \"Hp must be between 1-500\";else if (isNaN(attack) || onlyNumbers.test(attack) || attack < 1 || attack > 150) errors.attack = \"Attack must be between 1-150\";else if (isNaN(defense) || onlyNumbers.test(defense) || defense < 1 || defense > 150) errors.defense = \"Defense must be between 1-150\";else if (isNaN(speed) || onlyNumbers.test(speed) || speed < 1 || speed > 300) errors.speed = \"Speed must be between 1-300\";else if (isNaN(height) || onlyNumbers.test(height) || height < 1 || height > 50) errors.height = \"Height must be between 1-50\";else if (isNaN(weight) || onlyNumbers.test(weight) || weight < 0 || weight > 2000) errors.weight = \"Weight must be between 0-2000\";\n  return errors;\n};\nexport default function UpdatePage() {\n  _s();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const types = useSelector(state => state.types);\n  const {\n    pokemonId\n  } = useParams(); // get the pokemon ID from the URL parameter\n  const pokemonToUpdate = useSelector(state => state.pokemons[pokemonId]); // get the pokemon to update from state\n\n  const [pokemon, setPokemon] = useState({\n    // set the initial state using the existing pokemon\n    name: pokemonToUpdate.name,\n    types: pokemonToUpdate.types,\n    image: pokemonToUpdate.image,\n    hp: pokemonToUpdate.hp,\n    attack: pokemonToUpdate.attack,\n    defense: pokemonToUpdate.defense,\n    speed: pokemonToUpdate.speed,\n    height: pokemonToUpdate.height,\n    weight: pokemonToUpdate.weight\n  });\n  const [errors, setErrors] = useState({}); // store any validation errors\n\n  useEffect(() => {\n    setErrors(validateForm(pokemon));\n  }, [pokemon]);\n  function handleSelect(e) {\n    setPokemon({\n      ...pokemon,\n      types: [...pokemon.types, e.target.value]\n    });\n  }\n  function onInputChange(e) {\n    setPokemon({\n      ...pokemon,\n      [e.target.name]: e.target.value\n    });\n  }\n  function onSubmit(e) {\n    e.preventDefault();\n    if (Object.keys(errors).length > 0) {\n      alert('Please correct the errors in the form');\n      return;\n    }\n    dispatch(updatePokemon(pokemonId, pokemon)); // send the updated pokemon to the API via the updatePokemon action\n    alert('Pokemon has been updated');\n    history.push('/home');\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(UpdatePage, \"gUPXjJKxMmLUGgzlPgsWchCEmlA=\", false, function () {\n  return [useDispatch, useHistory, useSelector, useParams, useSelector];\n});\n_c = UpdatePage;\nvar _c;\n$RefreshReg$(_c, \"UpdatePage\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","useHistory","useParams","updatePokemon","NavBar","validateForm","name","image","hp","attack","defense","speed","height","weight","errors","urlRegex","onlyLetters","onlyNumbers","length","test","isNaN","UpdatePage","dispatch","history","types","state","pokemonId","pokemonToUpdate","pokemons","pokemon","setPokemon","setErrors","handleSelect","e","target","value","onInputChange","onSubmit","preventDefault","Object","keys","alert","push"],"sources":["F:/Henry/PI/PI Pokemon/PI-Pokemon-main/PI Pokemon/client/src/components/UpdatePage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { updatePokemon } from '../redux/actions/index';\r\nimport NavBar from './NavBar';\r\nimport \"./CreatePage.css\";\r\n\r\nconst validateForm = ({ name, image, hp, attack, defense, speed, height, weight }) => {\r\n    const errors = {};\r\n    const urlRegex = /(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/;\r\n    const onlyLetters = /[\\^$.¡*+?=¿%&!:|\\\\/()[\\]{}1234567890¬\"'#;-@¨]/;  \r\n    const onlyNumbers = /[\\^$.¡*+?=¿%&!:|\\\\/()[\\]{}¬\"'#;-@¨]/;\r\n   \r\n    if (\r\n      typeof name !== \"string\" || name.length <= 2 || name.length >= 25 || onlyLetters.test(name) \r\n    ){\r\n      errors.name = \"Please write between 2-25 lowercases\";    \r\n    }\r\n      \r\n    else if (!urlRegex.test(image))\r\n      errors.image = \"Please provide a valid URL for the image\";\r\n    else if (isNaN(hp) || onlyNumbers.test(hp) || hp < 1 || hp > 500)\r\n      errors.hp = \"Hp must be between 1-500\";\r\n    else if (isNaN(attack) || onlyNumbers.test(attack) || attack < 1|| attack > 150)\r\n      errors.attack = \"Attack must be between 1-150\";\r\n    else if (isNaN(defense) || onlyNumbers.test(defense) || defense < 1|| defense > 150)\r\n      errors.defense = \"Defense must be between 1-150\";  \r\n    else if (isNaN(speed) || onlyNumbers.test(speed) || speed < 1|| speed > 300)\r\n      errors.speed = \"Speed must be between 1-300\";\r\n    else if (isNaN(height) || onlyNumbers.test(height) || height < 1 || height > 50)\r\n      errors.height = \"Height must be between 1-50\";\r\n    else if (isNaN(weight) || onlyNumbers.test(weight) || weight < 0|| weight > 2000)\r\n      errors.weight = \"Weight must be between 0-2000\";  \r\n    return errors;\r\n  };\r\n  \r\nexport default function UpdatePage() {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const types = useSelector((state) => state.types);\r\n  const { pokemonId } = useParams(); // get the pokemon ID from the URL parameter\r\n  const pokemonToUpdate = useSelector((state) => state.pokemons[pokemonId]); // get the pokemon to update from state\r\n\r\n  const [pokemon, setPokemon] = useState({ // set the initial state using the existing pokemon\r\n    name: pokemonToUpdate.name,\r\n    types: pokemonToUpdate.types,\r\n    image: pokemonToUpdate.image,\r\n    hp: pokemonToUpdate.hp,\r\n    attack: pokemonToUpdate.attack,\r\n    defense: pokemonToUpdate.defense,\r\n    speed: pokemonToUpdate.speed,\r\n    height: pokemonToUpdate.height,\r\n    weight: pokemonToUpdate.weight,\r\n  });\r\n\r\n  const [errors, setErrors] = useState({}); // store any validation errors\r\n\r\n  useEffect(() => {\r\n    setErrors(validateForm(pokemon));\r\n  }, [pokemon]);\r\n\r\n  function handleSelect(e) {\r\n    setPokemon({\r\n      ...pokemon,\r\n      types: [...pokemon.types, e.target.value],\r\n    });\r\n  }\r\n\r\n  function onInputChange(e) {\r\n    setPokemon({\r\n      ...pokemon,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  }\r\n\r\n  function onSubmit(e) {\r\n    e.preventDefault();\r\n    if (Object.keys(errors).length > 0) {\r\n      alert('Please correct the errors in the form');\r\n      return;\r\n    }\r\n    dispatch(updatePokemon(pokemonId, pokemon)); // send the updated pokemon to the API via the updatePokemon action\r\n    alert('Pokemon has been updated');\r\n    history.push('/home');\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <NavBar />\r\n    </>\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}