[{"F:\\Henry\\PI\\PI Pokemon\\PI-Pokemon-main\\PI Pokemon\\client\\src\\index.js":"1","F:\\Henry\\PI\\PI Pokemon\\PI-Pokemon-main\\PI Pokemon\\client\\src\\App.js":"2","F:\\Henry\\PI\\PI Pokemon\\PI-Pokemon-main\\PI Pokemon\\client\\src\\redux\\store\\index.js":"3","F:\\Henry\\PI\\PI Pokemon\\PI-Pokemon-main\\PI Pokemon\\client\\src\\components\\LandingPage.jsx":"4","F:\\Henry\\PI\\PI Pokemon\\PI-Pokemon-main\\PI Pokemon\\client\\src\\components\\Detail.jsx":"5","F:\\Henry\\PI\\PI Pokemon\\PI-Pokemon-main\\PI Pokemon\\client\\src\\components\\Home.jsx":"6","F:\\Henry\\PI\\PI Pokemon\\PI-Pokemon-main\\PI Pokemon\\client\\src\\components\\CreatePage.jsx":"7","F:\\Henry\\PI\\PI Pokemon\\PI-Pokemon-main\\PI Pokemon\\client\\src\\redux\\reducers\\index.js":"8","F:\\Henry\\PI\\PI Pokemon\\PI-Pokemon-main\\PI Pokemon\\client\\src\\components\\NavBar.jsx":"9","F:\\Henry\\PI\\PI Pokemon\\PI-Pokemon-main\\PI Pokemon\\client\\src\\redux\\actions\\index.js":"10","F:\\Henry\\PI\\PI Pokemon\\PI-Pokemon-main\\PI Pokemon\\client\\src\\components\\Card.jsx":"11","F:\\Henry\\PI\\PI Pokemon\\PI-Pokemon-main\\PI Pokemon\\client\\src\\components\\Pagination.jsx":"12","F:\\Henry\\PI\\PI Pokemon\\PI-Pokemon-main\\PI Pokemon\\client\\src\\components\\SearchBar.jsx":"13","F:\\Henry\\PI\\PI Pokemon\\PI-Pokemon-main\\PI Pokemon\\client\\src\\components\\Delete.jsx":"14"},{"size":752,"mtime":1675918978923,"results":"15","hashOfConfig":"16"},{"size":789,"mtime":1676460299075,"results":"17","hashOfConfig":"16"},{"size":312,"mtime":1676093674220,"results":"18","hashOfConfig":"16"},{"size":507,"mtime":1676267264657,"results":"19","hashOfConfig":"16"},{"size":3681,"mtime":1676367409283,"results":"20","hashOfConfig":"16"},{"size":4992,"mtime":1676457594071,"results":"21","hashOfConfig":"16"},{"size":6978,"mtime":1676366868592,"results":"22","hashOfConfig":"16"},{"size":3298,"mtime":1676454867763,"results":"23","hashOfConfig":"16"},{"size":465,"mtime":1676452851598,"results":"24","hashOfConfig":"16"},{"size":3026,"mtime":1676460463709,"results":"25","hashOfConfig":"16"},{"size":603,"mtime":1676313210873,"results":"26","hashOfConfig":"16"},{"size":624,"mtime":1676314027500,"results":"27","hashOfConfig":"16"},{"size":906,"mtime":1676362484132,"results":"28","hashOfConfig":"16"},{"size":1437,"mtime":1676453358886,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"b18jwm",{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"F:\\Henry\\PI\\PI Pokemon\\PI-Pokemon-main\\PI Pokemon\\client\\src\\index.js",[],["62","63"],"F:\\Henry\\PI\\PI Pokemon\\PI-Pokemon-main\\PI Pokemon\\client\\src\\App.js",[],"F:\\Henry\\PI\\PI Pokemon\\PI-Pokemon-main\\PI Pokemon\\client\\src\\redux\\store\\index.js",[],"F:\\Henry\\PI\\PI Pokemon\\PI-Pokemon-main\\PI Pokemon\\client\\src\\components\\LandingPage.jsx",[],"F:\\Henry\\PI\\PI Pokemon\\PI-Pokemon-main\\PI Pokemon\\client\\src\\components\\Detail.jsx",["64"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getDetails, removeSelectedPokemon } from \"../redux/actions/index.js\";\r\nimport './Detail.css'\r\nimport NavBar from \"./NavBar.jsx\";\r\nexport default function Detail(props) {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getDetails(props.match.params.id)); //me viene el id de home por params\r\n  }, [dispatch]);\r\n \r\n  let details = useSelector((state) => state.detail); //traigo detail del estado de redux\r\n\r\n  const handleClick = (e) => {    //remuevo el pokemon para que no este cuando cargo otro\r\n    dispatch(removeSelectedPokemon())\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <NavBar />\r\n    <div className=\"container\">\r\n      \r\n      <div>\r\n        {details.length ? (\r\n          details.map((p) => (   \r\n            <> \r\n              <div>    \r\n              <h1 className=\"id\">#{p.id}</h1>\r\n              <h1 className=\"names\">{p.name.toUpperCase()}</h1>  \r\n\r\n                <div className=\"threeColumns\">    \r\n                  <div className=\"theTypesDiv\">                           \r\n                      <h2 className=\"typesTitle\"> Types:</h2>\r\n                        {p.types.length === 2 ? (\r\n                              <div>\r\n                                <h3 className=\"type1\">\r\n                                <ul className=\"type\">\r\n                                  <li className=\"typeLiDetail\">\r\n                                    {\r\n                                    typeof p.types[0] === 'string' ? p.types[0] : p.types[0]?.name}-  \r\n                                    {\r\n                                    typeof p.types[1] === 'string' ? p.types[1] : p.types[1]?.name}\r\n                            \r\n                                  </li>\r\n                                </ul>\r\n                                </h3>\r\n                              </div>\r\n                              ) : (\r\n                              <div>\r\n                                <h3 className=\"typeLiDetail2\">{\r\n                                typeof p.types[0] === 'string' ? p.types[0] : p.types[0]?.name}</h3>\r\n                              </div>\r\n                        )}\r\n                  </div>\r\n                  <div className=\"imageDetailDiv\">\r\n                    <img  className=\"imagen\" src={p.image} alt=\"\"/>\r\n                  </div>\r\n                  <div className=\"statsDiv\">                    \r\n                    <h2 className=\"statsTitle\"> Stats:  </h2>\r\n                    <ul className=\"uList\">                      \r\n                        <li className=\"list\" >Hp: {p.hp}</li>\r\n                        <li className=\"list\" >Attack: {p.attack}</li>\r\n                        <li className=\"list\" >Defense: {p.defense}</li>\r\n                        <li className=\"list\" >Speed: {p.speed}</li>\r\n                        <li className=\"list\" >Height: {p.height}</li>\r\n                        <li className=\"list\" >Weight: {p.weight}</li>\r\n                    </ul>                    \r\n                  </div>\r\n                </div> \r\n              </div> \r\n              </>              \r\n          ))\r\n        ) : (\r\n          <img className=\"spaceForImage\"\r\n            src={\"https://upload.wikimedia.org/wikipedia/commons/b/b9/Youtube_loading_symbol_1_(wobbly).gif\"}\r\n            width=\"250px\" height=\"300px\"\r\n            alt=\"Not found\"\r\n          />\r\n        )}\r\n      </div>\r\n      <div className=\"spaceForBack\">\r\n      <Link onClick= {(e) => handleClick(e)} to=\"/home\" className=\"backLink\"> Back </Link> </div>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n","F:\\Henry\\PI\\PI Pokemon\\PI-Pokemon-main\\PI Pokemon\\client\\src\\components\\Home.jsx",[],"F:\\Henry\\PI\\PI Pokemon\\PI-Pokemon-main\\PI Pokemon\\client\\src\\components\\CreatePage.jsx",["65","66","67"],"import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {useHistory} from \"react-router-dom\"\r\nimport { getTypes, postPokemon } from \"../redux/actions/index.js\";\r\nimport \"./CreatePage.css\";\r\nimport NavBar from \"./NavBar.jsx\";\r\n\r\n\r\nconst validateForm = ({name, image, hp, attack, defense, speed, height, weight,}) => {\r\n  const errors = {};\r\n  const urlRegex = /(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/;\r\n  const onlyLetters = /[\\^$.¡*+?=¿%&!:|\\\\/()[\\]{}1234567890¬\"'#;-@¨]/;  \r\n  const onlyNumbers = /[\\^$.¡*+?=¿%&!:|\\\\/()[\\]{}¬\"'#;-@¨]/;\r\n \r\n  if (\r\n    typeof name !== \"string\" || name.length <= 2 || name.length >= 25 || onlyLetters.test(name) \r\n  ){\r\n    errors.name = \"Please write between 2-25 lowercases\";    \r\n  }\r\n    \r\n  else if (!urlRegex.test(image))\r\n    errors.image = \"Please provide a valid URL for the image\";\r\n  else if (isNaN(hp) || onlyNumbers.test(hp) || hp < 1 || hp > 500)\r\n    errors.hp = \"Hp must be between 1-500\";\r\n  else if (isNaN(attack) || onlyNumbers.test(attack) || attack < 1|| attack > 150)\r\n    errors.attack = \"Attack must be between 1-150\";\r\n  else if (isNaN(defense) || onlyNumbers.test(defense) || defense < 1|| defense > 150)\r\n    errors.defense = \"Defense must be between 1-150\";  \r\n  else if (isNaN(speed) || onlyNumbers.test(speed) || speed < 1|| speed > 300)\r\n    errors.speed = \"Speed must be between 1-300\";\r\n  else if (isNaN(height) || onlyNumbers.test(height) || height < 1 || height > 50)\r\n    errors.height = \"Height must be between 1-50\";\r\n  else if (isNaN(weight) || onlyNumbers.test(weight) || weight < 0|| weight > 2000)\r\n    errors.weight = \"Weight must be between 0-2000\";  \r\n  return errors;\r\n};\r\n\r\n\r\nexport default function PokemonCreate() {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory(); //para volver a home\r\n  const types = useSelector((state) => state.types); //traigo types del estado de redux (updates)\r\n\r\n  const [errors,setErrors] = useState({}); //estado local para errores\r\n\r\n  const [pokemon, setPokemon] = useState({ //estado local para crear el pokemon\r\n    name: \"\",\r\n    types: [],\r\n    image: \"\",\r\n    hp: 0,\r\n    attack: 0,\r\n    defense: 0,\r\n    speed: 0,\r\n    height: 0,\r\n    weight: 0,\r\n  });\r\n\r\n  useEffect(() => { //traigo types del back\r\n    dispatch(getTypes());\r\n  }, []);\r\n\r\n  useEffect(() => { //valido el form\r\n    setErrors(validateForm(pokemon));\r\n  }, [pokemon]);\r\n\r\n  function handleSelect(e) { //cambio el estado de type con cada select\r\n    setPokemon({\r\n      ...pokemon,\r\n      types: [...pokemon.types, e.target.value],\r\n    });\r\n  }\r\n\r\n\r\nfunction onInputChange(e) { //cambio el estado segun el input\r\n  e.preventDefault();\r\n  setPokemon({\r\n    ...pokemon,\r\n    [e.target.name]: e.target.value,\r\n  });\r\n}\r\n\r\n\r\nfunction onSubmit(e) {\r\n  e.preventDefault();\r\n  if (Object.keys(errors).length > 0) { //chequeo si hay errores\r\n    alert(\"Please correct the errors in the form\");\r\n    return;\r\n  }\r\n  dispatch(postPokemon(pokemon)); //hago el post, despacho la action\r\n  alert(\"Pokemon has been created\");\r\n  setPokemon({ //reseteo el estado\r\n    name: \"\",\r\n    types: [],\r\n    image: \"\",\r\n    hp: 0,\r\n    attack: 0,\r\n    defense: 0,\r\n    speed: 0,\r\n    height: 0,\r\n    weight: 0,\r\n  });\r\n  history.push(\"/home\");\r\n}\r\n\r\n  return (\r\n    <>\r\n    <NavBar />\r\n    <form className=\"form\" onSubmit={onSubmit}> \r\n      <div className=\"form-group\">\r\n        <label for=\"name\"> Name: </label>\r\n        <input\r\n          onChange={onInputChange}\r\n          id=\"name\"\r\n          name=\"name\"\r\n          type=\"text\"\r\n          value={pokemon.name}\r\n          className=\"input\"\r\n        />{\" \"}\r\n        \r\n      </div>\r\n        {errors.name && <p className=\"error\"> {errors.name}</p>}\r\n        <div className=\"form-group\">\r\n        <label >Image: </label>\r\n        <input\r\n          onChange={onInputChange}\r\n          name=\"image\"\r\n          type=\"text\"\r\n          value={pokemon.image}\r\n          className=\"input\"\r\n        />{\" \"}\r\n      </div>  \r\n        {errors.image && <p className=\"error\"> {errors.image}</p>}\r\n      \r\n        {\" \"}\r\n        <div className=\"form-group\">\r\n        <label >Hp: </label>\r\n        <input\r\n          onChange={onInputChange}\r\n          name=\"hp\"\r\n          type=\"number\"\r\n          value={pokemon.hp}\r\n          className=\"input\"\r\n        />{\" \"}\r\n        </div>\r\n      {errors.hp && <p className=\"error\"> {errors.hp}</p>}\r\n      <div className=\"form-group\">\r\n        <label >Attack: </label>\r\n        <input\r\n          onChange={onInputChange}\r\n          name=\"attack\"\r\n          type=\"number\"\r\n          value={pokemon.attack}\r\n          className=\"input\"\r\n        />{\" \"}\r\n      </div>\r\n     {errors.attack && <p className=\"error\"> {errors.attack}</p>}\r\n     <div className=\"form-group\">\r\n        <label >Defense: </label>\r\n        <input\r\n          onChange={onInputChange}\r\n          name=\"defense\"\r\n          type=\"number\"\r\n          value={pokemon.defense}\r\n          className=\"input\"\r\n        />{\" \"}\r\n      </div>\r\n     {errors.defense && <p className=\"error\"> {errors.defense}</p>}\r\n     \r\n     <div className=\"form-group\">\r\n        <label >Speed: </label>\r\n        <input\r\n          onChange={onInputChange}\r\n          name=\"speed\"\r\n          type=\"number\"\r\n          value={pokemon.speed}\r\n          className=\"input\"\r\n        />{\" \"}\r\n      </div>\r\n      {errors.speed && <p className=\"error\"> {errors.speed}</p>}\r\n     \r\n      <div className=\"form-group\">\r\n        {\" \"}\r\n        <label >Height: </label>\r\n        <input\r\n          onChange={onInputChange}\r\n          name=\"height\"\r\n          type=\"number\"\r\n          value={pokemon.height}\r\n          className=\"input\"\r\n        />{\" \"}\r\n      </div>\r\n      {errors.height && <p className=\"error\"> {errors.height}</p>}\r\n     \r\n      <div className=\"form-group\">\r\n        <label >Weight: </label>\r\n        <input\r\n          onChange={onInputChange}\r\n          name=\"weight\"\r\n          type=\"number\"\r\n          value={pokemon.weight}\r\n          className=\"input\"\r\n        />{\" \"}\r\n      </div>\r\n      {errors.weight && <p className=\"error\"> {errors.weight}</p>}\r\n      \r\n        {\" \"}\r\n      <div className=\"form-group\">\r\n        <label >Types: </label>\r\n        <p className=\"types\">\r\n        <select onChange={handleSelect}>\r\n        <option value=\"\" disabled selected hidden>Type 1</option>\r\n          {types.map((e) => (\r\n            <option  value={e.name}>{e.name}</option>\r\n          ))}{\" \"}\r\n        </select>\r\n        </p>\r\n        <p className=\"types\">\r\n        <select onChange={handleSelect}>\r\n        <option value=\"\" disabled selected hidden>Type 2</option>\r\n          {types.map((e) => (\r\n            <option  value={e.name}>{e.name}</option>\r\n          ))}{\" \"}\r\n        </select>\r\n        </p>\r\n      </div>        \r\n      <button type=\"submit\" className=\"submit\">Create Pokemon</button>\r\n    </form>\r\n    </>\r\n  );\r\n}","F:\\Henry\\PI\\PI Pokemon\\PI-Pokemon-main\\PI Pokemon\\client\\src\\redux\\reducers\\index.js",["68","69"],"import { \r\n    GET_POKEMONS,\r\n    GET_TYPES,\r\n    GET_DETAILS,\r\n    SEARCH_POKEMON_BY_NAME,\r\n    FILTER_BY_TYPE,\r\n    SORT,\r\n    FILTER_CREATED,\r\n    FILTER_BY_ATTACK,\r\n    REMOVE_SELECTED_POKEMON,\r\n} from \"../actions/index.js\";\r\n\r\nconst initialState = {\r\n  pokemons: [], //lo que muestro\r\n  allPokemons: [], //todos los pokemons\r\n  detail: [], \r\n  types: [],\r\n};\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_POKEMONS:\r\n      return {\r\n        ...state,\r\n        pokemons: action.payload,\r\n        allPokemons: action.payload,\r\n      };\r\n    case FILTER_BY_TYPE:\r\n      const allPokemons = state.allPokemons;\r\n      const typeFiltered =\r\n        action.payload === \"type\"\r\n          ? allPokemons\r\n          : allPokemons.filter((e) => e.types.includes(action.payload) || e.types.some(obj => obj.name === action.payload) );\r\n      return {\r\n        ...state,\r\n        pokemons: typeFiltered,\r\n      };\r\n    case FILTER_CREATED:\r\n      const createdFilter =\r\n        action.payload === \"Created\"\r\n          ? state.allPokemons.filter((e) => e.id.length > 2)\r\n          : state.allPokemons.filter((e) => e.id <= 40); //osea Data Base\r\n      return {\r\n        ...state,\r\n        pokemons:\r\n          action.payload === \"All\" ? state.allPokemons : createdFilter,\r\n      };\r\n      case FILTER_BY_ATTACK:\r\n        let attackFilter = [...state.pokemons];\r\n        attackFilter = attackFilter.sort((a, b) => {\r\n          if (action.payload === \"Most Attack\") {\r\n            if (a.attack > b.attack) {\r\n              return -1;\r\n            }\r\n            if (a.attack < b.attack) {\r\n              return 1;\r\n            }\r\n            return 0; \r\n          }\r\n          if (action.payload === \"Less Attack\") {\r\n            if (a.attack > b.attack) {\r\n              return 1;\r\n            }\r\n            if (a.attack < b.attack) {\r\n              return -1;\r\n            }\r\n            return 0; \r\n          }\r\n        });\r\n        return {\r\n          ...state,\r\n          pokemons:\r\n            action.payload === \"Attack\" ? state.allPokemons : attackFilter\r\n        };\r\n    case SORT:\r\n      let orderedCharacters = [...state.pokemons];\r\n      orderedCharacters = orderedCharacters.sort((a, b) => {\r\n        if (action.payload === \"Ascendant\") {\r\n        if (a.name > b.name) {\r\n          return 1;\r\n        }\r\n        if (a.name < b.name) {\r\n          return -1;\r\n        }\r\n        return 0; \r\n      }\r\n      if (action.payload === \"Descendant\") {\r\n        if (a.name > b.name) {\r\n          return -1;\r\n        }\r\n        if (a.name < b.name) {\r\n          return 1;\r\n        }\r\n        return 0; \r\n      }\r\n    });\r\n\r\n      return {\r\n        ...state,\r\n        pokemons:\r\n          action.payload === \"Filter\" ? state.allPokemons : orderedCharacters\r\n      };\r\n    case SEARCH_POKEMON_BY_NAME:\r\n      return {\r\n        ...state,\r\n        pokemons: action.payload \r\n      };\r\n    case GET_DETAILS:\r\n      return {\r\n        ...state,\r\n        detail: action.payload,\r\n      };\r\n\r\n    case GET_TYPES:\r\n      return {\r\n        ...state,\r\n        types: action.payload,\r\n      };\r\n\r\n    case REMOVE_SELECTED_POKEMON:\r\n      return {\r\n        ...state,\r\n        detail: [],\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default rootReducer;","F:\\Henry\\PI\\PI Pokemon\\PI-Pokemon-main\\PI Pokemon\\client\\src\\components\\NavBar.jsx",[],"F:\\Henry\\PI\\PI Pokemon\\PI-Pokemon-main\\PI Pokemon\\client\\src\\redux\\actions\\index.js",[],"F:\\Henry\\PI\\PI Pokemon\\PI-Pokemon-main\\PI Pokemon\\client\\src\\components\\Card.jsx",[],"F:\\Henry\\PI\\PI Pokemon\\PI-Pokemon-main\\PI Pokemon\\client\\src\\components\\Pagination.jsx",[],"F:\\Henry\\PI\\PI Pokemon\\PI-Pokemon-main\\PI Pokemon\\client\\src\\components\\SearchBar.jsx",[],"F:\\Henry\\PI\\PI Pokemon\\PI-Pokemon-main\\PI Pokemon\\client\\src\\components\\Delete.jsx",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":12,"column":6,"nodeType":"76","endLine":12,"endColumn":16,"suggestions":"77"},{"ruleId":"78","severity":1,"message":"79","line":12,"column":62,"nodeType":"80","messageId":"81","endLine":12,"endColumn":63,"suggestions":"82"},{"ruleId":"78","severity":1,"message":"79","line":12,"column":105,"nodeType":"80","messageId":"81","endLine":12,"endColumn":106,"suggestions":"83"},{"ruleId":"74","severity":1,"message":"84","line":61,"column":6,"nodeType":"76","endLine":61,"endColumn":8,"suggestions":"85"},{"ruleId":"86","severity":1,"message":"87","line":50,"column":49,"nodeType":"88","messageId":"89","endLine":50,"endColumn":51},{"ruleId":"86","severity":1,"message":"87","line":77,"column":57,"nodeType":"88","messageId":"89","endLine":77,"endColumn":59},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.","ArrayExpression",["92"],"no-useless-escape","Unnecessary escape character: \\+.","Literal","unnecessaryEscape",["93","94"],["95","96"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["97"],"array-callback-return","Array.prototype.sort() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation",{"desc":"98","fix":"99"},{"messageId":"100","fix":"101","desc":"102"},{"messageId":"103","fix":"104","desc":"105"},{"messageId":"100","fix":"106","desc":"102"},{"messageId":"103","fix":"107","desc":"105"},{"desc":"108","fix":"109"},"Update the dependencies array to be: [dispatch, props.match.params.id]",{"range":"110","text":"111"},"removeEscape",{"range":"112","text":"113"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"114","text":"115"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"116","text":"113"},{"range":"117","text":"115"},"Update the dependencies array to be: [dispatch]",{"range":"118","text":"119"},[490,500],"[dispatch, props.match.params.id]",[483,484],"",[483,483],"\\",[526,527],[526,526],[2410,2412],"[dispatch]"]